#!/bin/bash
VERSION="0.1"
var_dir="/var/log/pi-update"
[ -d "$var_dir" ] || {
    sudo mkdir "$var_dir";
}

#verbose_log="${var_dir}/update_verbose.log"
#output_log="${var_dir}/update.log"
packages_file="${var_dir}/pi_packages_update"
upgr_status_file="${var_dir}/upgrade_exit_code"

NO_ACTION=0
UPDATE_READY=101
NEW_UPDATE=110
REBOOT_REQUIRED=120
UPDATE_PENDING=100
DPKG_CONFIG_NEEDED=200
PROCESS_RUNNING=201
check_restart() {
    if [ -e /var/run/reboot-required ]; then
        return $REBOOT_REQUIRED;
    else
        return $NO_ACTION;
    fi
}

quick_check() {
    if [ ! -f $packages_file ]; then
        return 0
    fi
    cat $packages_file
    return $NEW_UPDATE 
}

update_check() {
    test_dpkg
    aptitude update >/dev/null
    aptitude search '~U' > $packages_file
    if [ $(cat $packages_file | wc -l) -eq 0 ]; then
        rm $packages_file
        check_restart
        return $?
    else
        cat $packages_file
        return $NEW_UPDATE
    fi 
}

do_update() {
    test_dpkg
    nohup pi-upgrade 0<&- &>/dev/null &
}

test_dpkg() {
    other_process=$(pgrep 'dpkg\|aptitude')
    if [ "${other_process}X" != "X" ]; then
        exit $PROCESS_RUNNING
    elif [ -e $upgr_status_file ]; then
        last_upgrade_exit_code=$(cat $upgr_status_file)
        if [ $last_upgrade_exit_code -ne 0 ]; then
	        nohup pi-fix 0<&- &>/dev/null &
	        rm $upgr_status_file
	        exit $DPKG_CONFIG_NEEDED
        fi
    fi
}

print_help() {
    echo -e "Usage:";
    echo -e "\t -a|--apply-updates\tPerform system update\t\t100"
    echo -e "\t -c|--check-updates\tCheck for available updates\t110"
    echo -e "\t -v|--version\t\tDisplay version of this script"
    echo -e "\t -h|--help\t\tPrint this message"
    exit 1;
}

if [ $(id -u) -ne 0 ]; then
    echo 'Error: Root is required for this script'
    exit 1
fi

if [ -n "$(pgrep aptitude)" ]; then
    exit $UPDATE_PENDING
fi

if [ $# -gt 0 ]; then
    case "$1" in
    -h|--help)
        print_help
    ;;
    
    -a|--apply-updates)
        do_update
    ;;
    -c|--check-updates)
        update_check    
    ;;
    -q|--quick-check)
        quick_check    
    ;;
    -v|--version)
        echo $VERSION
    ;;
    -r|--reboot-required)
        check_restart
    ;;
    *)
        echo "ERROR (pi-update): Invalid parameter provided. Use -h to check usage."
        exit 1;
        ;;
    esac
else
    echo "ERROR (pi-update): Parameter NOT provided. Use -h to check usage."
    exit 250;
fi    
